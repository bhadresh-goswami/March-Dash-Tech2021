
@{
    ViewBag.Title = "JsonTimeLine";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- DevExtreme themes -->
<link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/20.2.5/css/dx.common.css">
<link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/20.2.5/css/dx.light.css">

<!-- DevExtreme library -->
<script type="text/javascript" src="https://cdn3.devexpress.com/jslib/20.2.5/js/dx.all.js"></script>
<!-- <script type="text/javascript" src="https://cdn3.devexpress.com/jslib/20.2.5/js/dx.web.js"></script> -->
<!-- <script type="text/javascript" src="https://cdn3.devexpress.com/jslib/20.2.5/js/dx.viz.js"></script> -->

<style>
    #gridContainer {
        height: 440px;
    }

    .options {
        padding: 20px;
        margin-top: 20px;
        background-color: rgba(191, 191, 191, 0.15);
    }

    .caption {
        font-size: 18px;
        font-weight: 500;
    }

    .option {
        margin-top: 10px;
    }

        .option > span {
            margin-right: 10px;
        }

        .option > .dx-selectbox {
            display: inline-block;
            vertical-align: middle;
        }
</style>
<div class="dx-viewport demo-container">
    <div id="gridContainer"></div>
    <div class="options">
        <div class="caption">Options</div>
        <div class="option">
            <span>Apply Filter</span>
            <div id="useFilterApplyButton"></div>
        </div>
        <div class="option">
            <div id="filterRow"></div>
        </div>
        <div class="option">
            <div id="headerFilter"></div>
        </div>
    </div>
</div>

<script>
    //@Url.Action("TimelineJsonData","CandidateTimeLine",new { @area = "reports"})
    $.getJSON("@Url.Action("TimelineJsonData","CandidateTimeLine",new { @area = "reports"})", null, function (data) {
        var orders = data;

        var dataGrid = $("#gridContainer").dxDataGrid({
            dataSource: orders, showColumnLines: true,
            showRowLines: true,
            columnsAutoWidth: true,
            showBorders: true,
            filterRow: {
                visible: true,
                applyFilter: "auto"
            },
            searchPanel: {
                visible: true,
                width: 240,
                placeholder: "Search..."
            },
            headerFilter: {
                visible: true
            },
            columns: [
                {
                    dataField: "CandidateName",
                    caption: "Candidate Name",
                    width: 140,
                    headerFilter: {
                        groupInterval: 10000
                    }
                },
                {
                    dataField: "SalesAssocaites",
                    caption: "Sales Assocaites",
                    width: 140,
                    headerFilter: {
                        groupInterval: 10000
                    }
                },
                {
                    dataField: "OnBoardingDate",
                    alignment: "right",
                    dataType: "date",
                    width: 120,
                    calculateFilterExpression: function (value, selectedFilterOperations, target) {
                        if (target === "headerFilter" && value === "weekends") {
                            return [[getOrderDay, "=", 0], "or", [getOrderDay, "=", 6]];
                        }
                        return this.defaultCalculateFilterExpression.apply(this, arguments);
                    },
                    headerFilter: {
                        dataSource: function (data) {
                            data.dataSource.postProcess = function (results) {
                                results.push({
                                    text: "Weekends",
                                    value: "weekends"
                                });
                                return results;
                            };
                        }
                    }
                },
                {
                dataField: "ExpertCVStatus",
                    alignment: "center",
                    width: 180, cellTemplate: function (container, options) {
                        $("<div>").append(options.value).appendTo(container)
                    }
                },
            {
                dataField: "MarketingStatus",
                alignment: "center",
                width: 180,
                width: 180, cellTemplate: function (container, options) {
                    $("<div>").append(options.value).appendTo(container)
                }
            },
            {
                dataField: "TrainingStatus",
                alignment: "center",
                width: 180,
                width: 180, cellTemplate: function (container, options) {
                    $("<div>").append(options.value).appendTo(container)
                }
            },
            {
                dataField: "PODate",
                alignment: "right",
                dataType: "date",
                width: 120,
                calculateFilterExpression: function (value, selectedFilterOperations, target) {
                    if (target === "headerFilter" && value === "weekends") {
                        return [[getOrderDay, "=", 0], "or", [getOrderDay, "=", 6]];
                    }
                    return this.defaultCalculateFilterExpression.apply(this, arguments);
                },
                headerFilter: {
                    dataSource: function (data) {
                        data.dataSource.postProcess = function (results) {
                            results.push({
                                text: "Weekends",
                                value: "weekends"
                            });
                            return results;
                        };
                    }
                }
            },
            {
                dataField: "TechnicalStatus",
                alignment: "right",
                width: 180, cellTemplate: function (container, options) {
                    $("<div>")
                        .append($("<button onClick='showTechnicalStatus()'>").append($("<img>", { "src": options.value, "width": "25px" })))
                        .appendTo(container);
                }
            },
            {
                dataField: "OnboardingStatus",
                alignment: "right",
                width: 180,
                cellTemplate: function (container, options) {
                    $("<div>")
                        .append($("<img>", { "src": options.value, "width": "25px" }))
                        .appendTo(container);
                }
            },
            {
                dataField: "AccountStatus",
                alignment: "right",
                width: 180,
                cellTemplate: function (container, options) {
                    $("<div>")
                        .append($("<img>", { "src": options.value, "width": "25px" }))
                        .appendTo(container);
                }
            },
            {
                dataField: "DisputeStatus",
                alignment: "right",
                width: 180,
                cellTemplate: function (container, options) {
                    $("<div>")
                        .append($("<img>", { "src": options.value }))
                        .appendTo(container);
                }
            }
            ]
            }).dxDataGrid('instance');

            var applyFilterTypes = [{
                key: "auto",
                name: "Immediately"
            }, {
                key: "onClick",
                name: "On Button Click"
            }];

            var applyFilterModeEditor = $("#useFilterApplyButton").dxSelectBox({
                items: applyFilterTypes,
                value: applyFilterTypes[0].key,
                valueExpr: "key",
                displayExpr: "name",
                onValueChanged: function (data) {
                    dataGrid.option("filterRow.applyFilter", data.value);
                }
            }).dxSelectBox("instance");

            $("#filterRow").dxCheckBox({
                text: "Filter Row",
                value: true,
                onValueChanged: function (data) {
                    dataGrid.clearFilter();
                    dataGrid.option("filterRow.visible", data.value);
                    applyFilterModeEditor.option("disabled", !data.value);
                }
            });

            $("#headerFilter").dxCheckBox({
                text: "Header Filter",
                value: true,
                onValueChanged: function (data) {
                    dataGrid.clearFilter();
                    dataGrid.option("headerFilter.visible", data.value);
                }
            });

            function getOrderDay(rowData) {
                return (new Date(rowData.OrderDate)).getDay();
            }



    })
</script>
